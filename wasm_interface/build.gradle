import org.gradle.nativeplatform.platform.OperatingSystem

plugins {
    id "java"
    id "java-library"
}

allprojects {
    group "wasm.adp"
}


sourceSets {
    main {
        resources {
            srcDirs = ["$buildDir/toArtifact"]
        }
    }
}

def osName
def dirName
def target
OperatingSystem os = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem
if (os.isLinux() == true) {
    osName = "x86_64-unknown-linux-gnu"
    dirName = "artifacts/linux_64/"
    target = "target/x86_64-unknown-linux-gnu/release/libwasm_interface.so"
} else if (os.isMacOsX() == true) {
    osName = "x86_64-apple-darwin"
    dirName = "artifacts/darwin-amd64/"
    target = "target/x86_64-apple-darwin/release/libwasm_interface.dylib"
} else {
    osName = "x86_64-pc-windows-msvc"
    dirName = "artifacts/windows-amd64/"
    target = "target/x86_64-pc-windows-msvc/release/libwasm_interface.dll"
}


jar {
    manifest {
        attributes("Implementation-Title": project.name,
                   "Implementation-Version": project.version)
    }
    archiveAppendix = "wasm_interface"
}

task buildRust(type: Exec) {
    commandLine "rustup", "target", "add", osName
    commandLine "cargo", "build", "--release", "--target=" + osName
}

task mkdirRun(type: Exec) {
    dependsOn buildRust
    commandLine "mkdir", "-p", dirName
}

task cpRun(type: Exec) {
    dependsOn mkdirRun
    commandLine "cp", target, dirName
}

task copyAllArtifacts(type: Copy) {
    dependsOn cpRun

    description "Copy build artifacts to the `build/` directory."

    from "artifacts"
    include "**/*"
    into "$buildDir/toArtifact/natives/"
}


jar.outputs.upToDateWhen { false }
compileTestJava.dependsOn cpRun
processResources.dependsOn copyAllArtifacts
